name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    outputs:
      # Adicione uma saída para indicar se a análise teve sucesso
      result: ${{ steps.sonarcloud.outputs.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        id: sonarcloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: afe81f9f507f8ecc5814d0b921454dfd6a210095
          SONAR_TOKEN: 70e6b0bfbcdf67d25713b5be9d0dcd5cff9cd5fe

  ecr:
    name: Build Image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: sonarcloud
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA5J5IBY5Y7MPWVGHX
          aws-secret-access-key: 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
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: docker_nodejs_demo
          IMAGE_TAG: nodejs_demo_image
        run: |
          docker build --platform=linux/amd64 -t fastfoodordering .
          docker tag fastfoodordering:latest 914643601265.dkr.ecr.us-east-1.amazonaws.com/fastfoodordering:latest
          docker push 914643601265.dkr.ecr.us-east-1.amazonaws.com/fastfoodordering:latest
